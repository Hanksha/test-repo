{
    "comments": "# Expiring a Redis Key\n\nThis service shows on how to expire a Redis key in [Gloop](https://docs.torocloud.com/martini/latest/developing/gloop/service/).\n\nGiven a String `connection`, `key` and a long  `seconds`, the service will expire the `key` if existing using the `RedisKeyMethods.expire` one-liner. if the `key` is not existing will use the `RedisStringMethods.setex`.  If `connection`'s value doesn't exist, then an error will be [logged](https://docs.torocloud.com/martini/latest/developing/one-liner/logger-methods//) to the [console](https://docs.torocloud.com/martini/latest/setup-and-administration/monitoring/logs/#console-view) from the service.\n\n## Prerequisite\n\nIf you haven't created a [Redis connection pool](https://docs.torocloud.com/martini/setup-and-administration/data-management/database/connection/redis/), follow these steps:\n\n1. Right click the [`Databases`](https://docs.torocloud.com/martini/setup-and-administration/data-management/database-connection-pool/) above and click new. \n2. Choose `type Redis` and name it `redis`.\n3. Change the `URI` to where your `redis instance` is located (e.g. `redis://127.0.0.1:6379/0`)\n4. Then save and start the connection pool.\n\n## Invoking the Service\n\nThe simplest way to execute this service is via the [Gloop Service Editor](https://docs.torocloud.com/martini/latest/developing/gloop/service/editor), where you may either [run](https://docs.torocloud.com/martini/latest/developing/gloop/service/running/) or [debug](https://docs.torocloud.com/martini/latest/developing/gloop/service/debugging/) it.\n\nWhen executing the service, the service will prompt you to provide the `connection`, `key`, and `seconds` input properties. A default value is already set for `connection`, `key`, and `seconds`.\n\nThe `RedisKeyMethods.expire` one-liner has a `redisExpireOutput` property which will return either `true` or `false` and for the `RedisStringMethods.setex` one-liner has a `redisSetexOutput` which will return a `OK` value if the expiration was set successfully. Both one-liners `output` properties were declared to the service `output` property.\n\nAfter `key` expiration was set, a `gloovy` step was added to wait for the `key` to expire using the given `seconds` value. after that will check if the `key` still exists using the `RedisKeyMethods.exists` and get the `redisExistsOutput` return value.\n\n## Expected Output\n\n### Properties\n\nThis service will return a model named `output` with the property `message`.\n\n- if `redisExistsOutput`'s value is `1`, then `output.message` will be set to `\"sampleKey key did not expired\"`.\n- if `redisExistsOutput`'s value is `0`, then `output.message` will be set to `\"sampleKey key successfully expired\"`.\n\n### Logs\n\nUpon setting the [`output` model](https://docs.torocloud.com/martini/latest/developing/gloop/service/running/#outputs), the service will then proceed to logging it to the console. So you should expect to [see a message printed like this in the console](https://docs.torocloud.com/martini/latest/setup-and-administration/monitoring/logs/#console-view):\n\n```\nINFO  [Martini] sampleKey expiration has been set\nINFO  [Martini] Will wait for 10 for the key expiration\nINFO  [Martini] Checking if the sampleKey key was expired\nINFO  [Martini] sampleKey key successfully expired\n\n```",
    "input": [
        {
            "name": "connection",
            "defaultValue": "redis"
        },
        {
            "name": "key",
            "defaultValue": "sampleKey"
        },
        {
            "name": "seconds",
            "type": "long",
            "defaultValue": 5
        }
    ],
    "output": [
        {
            "name": "output",
            "type": "model",
            "gloopProperties": [
                {
                    "name": "message"
                }
            ]
        }
    ],
    "steps": [
        {
            "type": "invokeCode",
            "comments": "This step will check if the key exists in Redis",
            "declare": [
                {
                    "variables": [
                        {
                            "name": "redisExistsOutput",
                            "type": "long",
                            "comments": "Long integer-reply specifically: Number of existing keys"
                        }
                    ]
                }
            ],
            "className": "io.toro.martini.redis.RedisKeyMethods",
            "methodName": "exists",
            "parameters": [
                "java.lang.String",
                "io.toro.gloop.engine.GloopExecutionContext",
                "java.lang.Object[]"
            ],
            "inputs": [
                {
                    "from": [
                        "connection"
                    ],
                    "to": [
                        "connectionName"
                    ]
                },
                {
                    "from": [
                        "key"
                    ],
                    "to": [
                        "keys"
                    ]
                }
            ],
            "outputs": [
                {
                    "from": [
                        "redisExistsOutput"
                    ],
                    "to": [
                        "redisExistsOutput"
                    ]
                }
            ]
        },
        {
            "type": "fork",
            "comments": "This step will determine if the key is existing",
            "expression": "redisExistsOutput",
            "children": [
                {
                    "type": "block",
                    "label": "1",
                    "comments": "If key is existing it will return 1",
                    "children": [
                        {
                            "type": "invokeCode",
                            "comments": "This step will expire the given key depends on the inputted seconds",
                            "declare": [
                                {
                                    "variables": [
                                        {
                                            "name": "redisExpireOutput",
                                            "type": "boolean",
                                            "comments": "Boolean integer-reply specifically:          {@literal true} if the timeout was set. {@literal false} if\n{@code key} does not exist or the timeout could not         be set."
                                        }
                                    ]
                                }
                            ],
                            "className": "io.toro.martini.redis.RedisKeyMethods",
                            "methodName": "expire",
                            "parameters": [
                                "java.lang.String",
                                "java.lang.Object",
                                "long",
                                "io.toro.gloop.engine.GloopExecutionContext"
                            ],
                            "inputs": [
                                {
                                    "from": [
                                        "connection"
                                    ],
                                    "to": [
                                        "connectionName"
                                    ]
                                },
                                {
                                    "from": [
                                        "key"
                                    ],
                                    "to": [
                                        "key"
                                    ]
                                },
                                {
                                    "from": [
                                        "seconds"
                                    ],
                                    "to": [
                                        "seconds"
                                    ]
                                }
                            ],
                            "outputs": [
                                {
                                    "from": [
                                        "redisExpireOutput"
                                    ],
                                    "to": [
                                        "redisExpireOutput"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "fork",
                            "comments": "This will determine if the set of expiration is successful",
                            "expression": "redisExpireOutput",
                            "children": [
                                {
                                    "type": "invokeCode",
                                    "label": "true",
                                    "comments": "returns true if successful and will log a message",
                                    "className": "io.toro.martini.LoggerMethods",
                                    "methodName": "info",
                                    "parameters": [
                                        "java.lang.String"
                                    ],
                                    "inputs": [
                                        {
                                            "type": "set",
                                            "expression": "\"${key} expiration has been set\"",
                                            "evaluate": true,
                                            "to": [
                                                "message"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "invokeCode",
                                    "label": "false",
                                    "comments": "returns false if not successful and will log a message",
                                    "className": "io.toro.martini.LoggerMethods",
                                    "methodName": "info",
                                    "parameters": [
                                        "java.lang.String"
                                    ],
                                    "inputs": [
                                        {
                                            "type": "set",
                                            "expression": "\"${key} expiration has not been set\"",
                                            "evaluate": true,
                                            "to": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                },
                {
                    "type": "block",
                    "label": "0",
                    "comments": "If key is not existing it will return 0",
                    "children": [
                        {
                            "type": "invokeCode",
                            "comments": "If the ket is not existing, this step will set a key and will a expiration at a same time",
                            "declare": [
                                {
                                    "variables": [
                                        {
                                            "name": "redisSetexOutput",
                                            "comments": "String simple-string-reply"
                                        }
                                    ]
                                }
                            ],
                            "className": "io.toro.martini.redis.RedisStringMethods",
                            "methodName": "setex",
                            "parameters": [
                                "java.lang.String",
                                "java.lang.Object",
                                "long",
                                "java.lang.Object",
                                "io.toro.gloop.engine.GloopExecutionContext"
                            ],
                            "inputs": [
                                {
                                    "from": [
                                        "connection"
                                    ],
                                    "to": [
                                        "connectionName"
                                    ]
                                },
                                {
                                    "from": [
                                        "key"
                                    ],
                                    "to": [
                                        "key"
                                    ]
                                },
                                {
                                    "from": [
                                        "seconds"
                                    ],
                                    "to": [
                                        "seconds"
                                    ]
                                },
                                {
                                    "type": "set",
                                    "expression": "Hello World",
                                    "to": [
                                        "value"
                                    ]
                                }
                            ],
                            "outputs": [
                                {
                                    "from": [
                                        "redisSetexOutput"
                                    ],
                                    "to": [
                                        "redisSetexOutput"
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "fork",
                            "comments": "This will determine if the set and expiration was successful",
                            "expression": "redisSetexOutput",
                            "children": [
                                {
                                    "type": "invokeCode",
                                    "label": "OK",
                                    "comments": "If successful will return a `OK` and will log a message",
                                    "className": "io.toro.martini.LoggerMethods",
                                    "methodName": "info",
                                    "parameters": [
                                        "java.lang.String"
                                    ],
                                    "inputs": [
                                        {
                                            "type": "set",
                                            "expression": "\"${key} expiration has been set\"",
                                            "evaluate": true,
                                            "to": [
                                                "message"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "invokeCode",
                                    "label": "$else",
                                    "comments": "If not successful, will log a message",
                                    "className": "io.toro.martini.LoggerMethods",
                                    "methodName": "info",
                                    "parameters": [
                                        "java.lang.String"
                                    ],
                                    "inputs": [
                                        {
                                            "type": "set",
                                            "expression": "\"${key} expiration has not been set\"",
                                            "evaluate": true,
                                            "to": [
                                                "message"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "invokeCode",
            "comments": "Will log a message to wait a seconds",
            "className": "io.toro.martini.LoggerMethods",
            "methodName": "info",
            "parameters": [
                "java.lang.String"
            ],
            "inputs": [
                {
                    "type": "set",
                    "expression": "\"Will wait for ${seconds} seconds for the key expiration\"",
                    "evaluate": true,
                    "to": [
                        "message"
                    ]
                }
            ]
        },
        {
            "type": "gloovy",
            "comments": "This step wIll wait for a seconds for the key to expire",
            "gloovyScript": "Thread.sleep(seconds * 1000)"
        },
        {
            "type": "invokeCode",
            "comments": "WIll log a message to check if it's already expire",
            "className": "io.toro.martini.LoggerMethods",
            "methodName": "info",
            "parameters": [
                "java.lang.String"
            ],
            "inputs": [
                {
                    "type": "set",
                    "expression": "\"Checking if the ${key} key was expired\"",
                    "evaluate": true,
                    "to": [
                        "message"
                    ]
                }
            ]
        },
        {
            "type": "invokeCode",
            "comments": "This step will check if the key exists in Redis",
            "declare": [
                {
                    "variables": [
                        {
                            "name": "redisExistsOutput1",
                            "type": "long",
                            "comments": "Long integer-reply specifically: Number of existing keys"
                        }
                    ]
                }
            ],
            "className": "io.toro.martini.redis.RedisKeyMethods",
            "methodName": "exists",
            "parameters": [
                "java.lang.String",
                "io.toro.gloop.engine.GloopExecutionContext",
                "java.lang.Object[]"
            ],
            "inputs": [
                {
                    "from": [
                        "connection"
                    ],
                    "to": [
                        "connectionName"
                    ]
                },
                {
                    "from": [
                        "key"
                    ],
                    "to": [
                        "keys"
                    ]
                }
            ],
            "outputs": [
                {
                    "from": [
                        "redisExistsOutput"
                    ],
                    "to": [
                        "redisExistsOutput1"
                    ]
                }
            ]
        },
        {
            "type": "fork",
            "comments": "This step will check if the key exists in Redis",
            "expression": "redisExistsOutput1",
            "children": [
                {
                    "type": "invokeCode",
                    "label": "1",
                    "comments": "This will log the message and will map it under output model",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "info",
                    "parameters": [
                        "java.lang.String"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "\"${key} key did not expired\"",
                            "evaluate": true,
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "output"
                            ],
                            "to": [
                                "output",
                                "message"
                            ]
                        }
                    ]
                },
                {
                    "type": "invokeCode",
                    "label": "0",
                    "comments": "This will log the message and will map it under output model",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "info",
                    "parameters": [
                        "java.lang.String"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "\"${key} key successfully expired\"",
                            "evaluate": true,
                            "to": [
                                "message"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "output"
                            ],
                            "to": [
                                "output",
                                "message"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}