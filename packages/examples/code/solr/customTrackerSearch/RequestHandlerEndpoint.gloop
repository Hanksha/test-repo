{
    "comments": "# [Searching Tracker Documents](https://docs.torocloud.com/martini/latest/quick-start/resources/examples-package/search-indices/)\n\nThis Gloop service uses Martini's Solr REST API to search for [Tracker documents](https://docs.torocloud.com/martini/tracker-search-index/#documents).\n\n_The `url` input property determines which Solr core gets queried. By default, this service queries the `tracker` core._\n\n## Invoking the Service\n\nUsing the [Gloop Service editor](https://docs.torocloud.com/martini/latest/developing/gloop/service/editor/) is the fastest way to [run this service](https://docs.torocloud.com/martini/latest/developing/gloop/service/running/). Populate this service's [input properties](https://docs.torocloud.com/martini/developing/services/overview/input-output/), or use the default values already provided.\n\t\n## Expected Output\n\n### Properties\n\n_The output of this service varies, depending on the contents of the provided search index._\n\nThis service's return value, if represented in JSON, would look something like below:\n\n```\n{\n    \"RequestHandlerEndpointOutput\": {\n        \"responseHeader\": {\n            \"status\": 0,\n            \"QTime\": 3,\n            \"params\": {\n                \"q\": \"*:*\",\n                \"cache\": \"false\",\n                \"rows\": \"20\",\n                \"wt\": \"json\",\n                \"version\": \"2.2\"\n            }\n        },\n        \"response\": {\n            \"numFound\": 1,\n            \"start\": 0,\n            \"docs\": [\n                {\n                    \"internalId\": \"6efcb7cb9087a78f98c12cbcfb42522c57d71592\",\n                    \"externalId\": \"1557377738180\",\n                    \"documentTypeId\": \"report-builder-demo\",\n                    \"documentTypeName\": \"report-builder-demo\",\n                    \"stateName\": \"Received\",\n                    \"senderId\": \"report-builder-demo/gloop/randomNumbers\",\n                    \"receiverId\": \"report-builder-demo/gloop/randomNumbers\",\n                    \"userName\": \"\",\n                    \"stringProp_State\": \"Alaska\",\n                    \"stringProp_Martini_Server\": null,\n                    \"docContent\": null,\n                    \"intProp_Duration(ms)\": null,\n                    \"timeReceived\": \"2019-05-09T04:55:38.180Z\",\n                    \"_version_\": 1633028919203463168\n                }\n            ]\n        }\n    }\n}\n```\n\n[Service outputs can be viewed in the Console view](https://docs.torocloud.com/martini/latest/developing/gloop/service/running/#outputs). Aside from the JSON format like above, it can also be viewed in XML or in a value tree.\n\n### Logs\n\nIf this is the first service you run after a fresh installation, then you will see the logs below in the [console](https://docs.torocloud.com/martini/latest/setup-and-administration/monitoring/logs/#console-view):\n\n```\nINFO  [Martini] Checking user information...\nINFO  [Martini] Admin not found. Creating user named 'Admin'\n```",
    "input": [
        {
            "name": "url",
            "defaultValue": "http://localhost:${port}/esbapi/v1/solr/core/tracker/select"
        },
        {
            "name": "q",
            "defaultValue": "*:*"
        },
        {
            "name": "rows",
            "defaultValue": "20"
        },
        {
            "name": "cache",
            "defaultValue": "false"
        },
        {
            "name": "headers",
            "type": "model",
            "array": true,
            "reference": "io.toro.martini.http.Header"
        }
    ],
    "output": [
        {
            "name": "RequestHandlerEndpointOutput",
            "type": "model",
            "reference": "solr.customTrackerSearch.model.RequestHandlerEndpointOutput"
        }
    ],
    "steps": [
        {
            "comments": "Map the queries to a string wrapped in a Gloop model",
            "declare": [
                {
                    "variables": [
                        {
                            "name": "queryStringParameters",
                            "type": "model",
                            "gloopProperties": [
                                {
                                    "name": "q"
                                },
                                {
                                    "name": "rows"
                                },
                                {
                                    "name": "cache"
                                }
                            ]
                        },
                        {
                            "name": "port"
                        }
                    ]
                }
            ],
            "lines": [
                {
                    "from": [
                        "q"
                    ],
                    "to": [
                        "queryStringParameters",
                        "q"
                    ]
                },
                {
                    "from": [
                        "rows"
                    ],
                    "to": [
                        "queryStringParameters",
                        "rows"
                    ]
                },
                {
                    "from": [
                        "cache"
                    ],
                    "to": [
                        "queryStringParameters",
                        "cache"
                    ]
                },
                {
                    "type": "set",
                    "expression": "'server.http.port'.getApplicationProperty()",
                    "evaluate": true,
                    "to": [
                        "port"
                    ]
                }
            ]
        },
        {
            "type": "invokeGloop",
            "comments": "Generate access token for user; token will be used to access Solr API",
            "name": "util.GenerateUserToken",
            "inputs": [
                {
                    "type": "set",
                    "expression": "Admin",
                    "to": [
                        "username"
                    ]
                }
            ],
            "outputs": [
                {
                    "from": [
                        "Authorization"
                    ],
                    "to": [
                        "headers"
                    ]
                }
            ]
        },
        {
            "type": "block",
            "blockType": "TRY_CATCH",
            "children": [
                {
                    "type": "invokeCode",
                    "comments": "Send the request to Solr",
                    "declare": [
                        {
                            "variables": [
                                {
                                    "name": "response",
                                    "type": "model",
                                    "reference": "io.toro.martini.http.Response"
                                }
                            ]
                        }
                    ],
                    "className": "io.toro.martini.HttpMethods",
                    "methodName": "http",
                    "parameters": [
                        "io.toro.gloop.object.property.GloopModel",
                        "io.toro.gloop.object.property.GloopModel",
                        "java.lang.String",
                        "java.lang.String",
                        "boolean",
                        "io.toro.gloop.object.property.GloopModel",
                        "io.toro.gloop.engine.GloopExecutionContext"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "queryStringParameters"
                            ],
                            "to": [
                                "request",
                                "parameters"
                            ]
                        },
                        {
                            "from": [
                                "headers"
                            ],
                            "to": [
                                "request",
                                "headers"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "GloopObject",
                            "to": [
                                "returnAs"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "Auto Detect",
                            "to": [
                                "responseType"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "GET",
                            "to": [
                                "request",
                                "method"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "GloopObject",
                            "to": [
                                "returnAs"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "true",
                            "to": [
                                "throwHttpExceptions"
                            ]
                        },
                        {
                            "type": "set",
                            "expression": "evalStringTemplate( url )",
                            "evaluate": true,
                            "to": [
                                "request",
                                "uri"
                            ]
                        }
                    ],
                    "outputs": [
                        {
                            "from": [
                                "response"
                            ],
                            "to": [
                                "response"
                            ]
                        }
                    ]
                },
                {
                    "type": "fork",
                    "comments": "Check response code",
                    "expression": "response.responseCode",
                    "children": [
                        {
                            "type": "block",
                            "label": "200",
                            "comments": "If successful",
                            "children": [
                                {
                                    "comments": "Set output",
                                    "lines": [
                                        {
                                            "from": [
                                                "response",
                                                "content"
                                            ],
                                            "to": [
                                                "RequestHandlerEndpointOutput"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        },
                        {
                            "type": "block",
                            "label": "$else",
                            "comments": "If not successful",
                            "children": [
                                {
                                    "type": "invokeCode",
                                    "comments": "Throw exception",
                                    "className": "io.toro.martini.GloopMethods",
                                    "methodName": "throwApiException",
                                    "parameters": [
                                        "io.toro.gloop.object.property.GloopModel"
                                    ],
                                    "inputs": [
                                        {
                                            "from": [
                                                "response",
                                                "content"
                                            ],
                                            "to": [
                                                "apiException"
                                            ]
                                        }
                                    ]
                                },
                                {
                                    "type": "break",
                                    "comments": "Terminate service",
                                    "expression": "$gloopAll"
                                }
                            ]
                        }
                    ]
                }
            ],
            "catch": [
                {
                    "type": "invokeCode",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "error",
                    "parameters": [
                        "java.lang.String"
                    ],
                    "inputs": [
                        {
                            "from": [
                                "$gloopException",
                                "message"
                            ],
                            "to": [
                                "message"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "invokeCode",
            "comments": "Log finished message",
            "className": "io.toro.martini.LoggerMethods",
            "methodName": "info",
            "parameters": [
                "java.lang.String"
            ],
            "inputs": [
                {
                    "type": "set",
                    "expression": "The service has finished running. Learn more how this service works by checking out the line comments in each step in this service. If you want to see the output in Martini logs, visit https://docs.torocloud.com/martini/latest/setup-and-administration/monitoring/logs/#console-view and check how to view Console logs for the platform you are using.",
                    "to": [
                        "message"
                    ]
                }
            ]
        }
    ]
}
