{
    "comments": "# [Using a Gloop SQL Service to Perform a Batch Insert](https://docs.torocloud.com/martini/latest/quick-start/resources/examples-package/sql-services/)\n\nThis [Gloop service](https://docs.torocloud.com/martini/latest/developing/gloop/service/) can insert multiple records to the `NAMES` table.\n\nIt invokes a [Gloop SQL service](https://docs.torocloud.com/martini/latest/developing/gloop/sql/) to communicate with the database. This Gloop SQL service returns a [Gloop cursor](https://docs.torocloud.com/martini/latest/developing/gloop/model/cursor/) which the service iteratively maps entries to, in order to write the records.\n\n## Invoking the Service\n\nUsing the [Gloop Service editor](https://docs.torocloud.com/martini/latest/developing/gloop/service/editor/) is the fastest way to [run this service](https://docs.torocloud.com/martini/latest/developing/gloop/service/running/).\n\nEntries to write to the table must be provided through the `name` input property, which is an array of `Name` models. Each `Name` model will require three properties: `id`, `firstName`, and `lastName`.\n\n## Expected Output\n\n[Console messages](https://docs.torocloud.com/martini/latest/setup-and-administration/monitoring/logs/#console-view) like the following are expected when executing this service:\n\n```\nINFO  [Martini] We are now going to start iterating over the name array property and map it to the output cursor\nINFO  [Martini] Inserting record for Jack\nINFO  [Martini] Inserting record for Jesse\nINFO  [Martini] Inserting record for Angela\n...\n```\n\nIf this is the first service to be invoked in a newly installed Martini instance, the following logs would be shown before the logs above:\n\n```\nINFO  [JndiBindingDataSourceManager] Successfully bound datasource to 'java:comp/env/jdbc/example_db'\nINFO  [JndiBindingDataSourceManager] Successfully bound datasource to 'java:comp/env/jdbc/example_xa_db_migrated'\nINFO  [JndiBindingDataSourceManager] Successfully bound datasource to 'java:comp/env/jdbc/conversion_sample'\nINFO  [Martini] Creating default Martini user named Demo\nINFO  [Martini] Creating default Martini user group named 'Rule 1 GROUP' and assign user 'Demo' in it\nINFO  [Martini] Creating default Martini monitor rule named Rule 1\nINFO  [Martini] Creating default Martini user named DemoII\nINFO  [Martini] Creating default Martini user group named 'Rule 2 GROUP' and assign user 'DemoII' in it\nINFO  [Martini] Creating default Martini monitor rule named Rule 2\n```\n\nThis happens due to Martini setting up required dependencies. This only happens once. If the dependencies are already set up, then you won't be seeing these anymore.",
    "input": [
        {
            "name": "name",
            "type": "model",
            "array": true,
            "gloopProperties": [
                {
                    "name": "id",
                    "type": "integer"
                },
                {
                    "name": "firstName"
                },
                {
                    "name": "lastName"
                }
            ]
        }
    ],
    "output": [
        {
            "name": "output",
            "type": "model",
            "gloopProperties": [
                {
                    "name": "message",
                    "defaultValue": "Gloop Service Completed. View the output of this service by checking the Martini logs. See how at https://docs.torocloud.com/martini/latest/setup-and-administration/monitoring/logs/#console-view"
                }
            ]
        }
    ],
    "steps": [
        {
            "type": "invokeGloop",
            "name": "util.CheckDependency"
        },
        {
            "type": "invokeGloop",
            "comments": "Invoke the sql service that produces the cursor.",
            "name": "sqlServices.sql.multiple.InsertMultipleNames",
            "declare": [
                {
                    "variables": [
                        {
                            "name": "insertMultipleNamesOutputCursor",
                            "type": "model",
                            "array": true,
                            "gloopProperties": [
                                {
                                    "name": "id",
                                    "type": "integer"
                                },
                                {
                                    "name": "firstName"
                                },
                                {
                                    "name": "lastName"
                                }
                            ]
                        }
                    ]
                }
            ],
            "inputs": [
                {
                    "type": "set",
                    "expression": "1000",
                    "to": [
                        "insertMultipleNamesInput",
                        "$batchSize"
                    ]
                }
            ],
            "outputs": [
                {
                    "from": [
                        "insertMultipleNamesOutputCursor"
                    ],
                    "to": [
                        "insertMultipleNamesOutputCursor"
                    ]
                }
            ]
        },
        {
            "type": "invokeCode",
            "className": "io.toro.martini.LoggerMethods",
            "methodName": "info",
            "parameters": [
                "java.lang.String"
            ],
            "inputs": [
                {
                    "type": "set",
                    "expression": "We are now going to start iterating over the name array property and map it to the output cursor",
                    "to": [
                        "message"
                    ]
                }
            ]
        },
        {
            "type": "iterate",
            "comments": "Iterate through the name model array as input array and the generated cursor as output array",
            "input": {
                "path": [
                    "name"
                ]
            },
            "output": {
                "path": [
                    "insertMultipleNamesOutputCursor"
                ]
            },
            "children": [
                {
                    "type": "invokeCode",
                    "className": "io.toro.martini.LoggerMethods",
                    "methodName": "info",
                    "parameters": [
                        "java.lang.String"
                    ],
                    "inputs": [
                        {
                            "type": "set",
                            "expression": "\"Inserting record for ${name.firstName}\"",
                            "evaluate": true,
                            "to": [
                                "message"
                            ]
                        }
                    ]
                },
                {
                    "comments": "Map the properties of the name model to the cursor",
                    "lines": [
                        {
                            "from": [
                                "name"
                            ],
                            "to": [
                                "insertMultipleNamesOutputCursor"
                            ]
                        }
                    ]
                }
            ]
        },
        {
            "type": "invokeCode",
            "comments": "log finished message",
            "className": "io.toro.martini.LoggerMethods",
            "methodName": "info",
            "parameters": [
                "java.lang.String"
            ],
            "inputs": [
                {
                    "type": "set",
                    "expression": "The service has finished running. Learn more how this service works by checking out the line comments in each step in this service. If you want to see the output in Martini logs, visit https://docs.torocloud.com/martini/latest/setup-and-administration/monitoring/logs/#console-view and check how to view Console logs for the platform you are using.",
                    "to": [
                        "message"
                    ]
                }
            ]
        }
    ]
}
