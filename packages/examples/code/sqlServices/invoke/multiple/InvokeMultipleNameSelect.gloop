{
    "comments": "# [Using a Gloop SQL Service to Select Multiple Records](https://docs.torocloud.com/martini/latest/quick-start/resources/examples-package/sql-services/)\n\nThis [Gloop service](https://docs.torocloud.com/martini/latest/developing/gloop/service/) returns an array of records from the `NAMES` table.\n\nIt invokes a [Gloop SQL service](https://docs.torocloud.com/martini/latest/developing/gloop/sql/) to communicate with the database. This SQL service returns a [Gloop cursor](https://docs.torocloud.com/martini/latest/developing/gloop/model/cursor/), which the service iterates over to map entries to the `names` output property.\n\n## Invoking the Service\n\nUsing the [Gloop Service editor](https://docs.torocloud.com/martini/latest/developing/gloop/service/editor/) is the fastest way to [run this service](https://docs.torocloud.com/martini/latest/developing/gloop/service/running/). No [inputs](https://docs.torocloud.com/martini/developing/services/overview/input-output/) are required.\n\n## Expected Output\n\nThe output of this service depends on the entries in the `NAMES` table. If you want to have the same entries as described below, you should run `util.CleanupService.gloop`. Doing so will ensure your database contains only the initial data.\n\n### Properties\n\nThis service's return value, if represented in JSON, would look something like below:\n\n```\n{\n    \"names\": [\n        {\n            \"id\": 1,\n            \"firstName\": \"Jack\",\n            \"lastName\": \"Baker\"\n        },\n        {\n            \"id\": 2,\n            \"firstName\": \"Marguirite\",\n            \"lastName\": \"Baker\"\n        },\n        {\n            \"id\": 3,\n            \"firstName\": \"Eveline\",\n            \"lastName\": \"Baker\"\n        },\n        {\n            \"id\": 4,\n            \"firstName\": \"Lucas\",\n            \"lastName\": \"Baker\"\n        }\n    ]\n}\n```\n\n[Service outputs can be viewed in the Console view](https://docs.torocloud.com/martini/latest/developing/gloop/service/running/#outputs). Aside from the JSON format like above, it can also be viewed in XML or in a value tree.",
    "output": [
        {
            "name": "names",
            "type": "model",
            "array": true,
            "reference": "sqlServices.model.Name"
        }
    ],
    "steps": [
        {
            "type": "invokeGloop",
            "name": "util.CheckDependency"
        },
        {
            "type": "invokeGloop",
            "comments": "Invoke the sql service that produces the cursor.",
            "name": "sqlServices.sql.multiple.SelectMultipleNames",
            "declare": [
                {
                    "variables": [
                        {
                            "name": "selectMultipleNamesInputCursor",
                            "type": "model",
                            "array": true,
                            "gloopProperties": [
                                {
                                    "name": "ID",
                                    "type": "integer",
                                    "required": true,
                                    "allowNull": false
                                },
                                {
                                    "name": "FIRST_NAME",
                                    "required": true,
                                    "allowNull": false
                                },
                                {
                                    "name": "LAST_NAME",
                                    "required": true,
                                    "allowNull": false
                                }
                            ]
                        }
                    ]
                }
            ],
            "outputs": [
                {
                    "from": [
                        "selectMultipleNamesInputCursor"
                    ],
                    "to": [
                        "selectMultipleNamesInputCursor"
                    ]
                }
            ]
        },
        {
            "type": "iterate",
            "comments": "Iterate through the cursor as an input array and the names variable as an output array",
            "input": {
                "path": [
                    "selectMultipleNamesInputCursor"
                ]
            },
            "output": {
                "path": [
                    "names"
                ]
            },
            "children": [
                {
                    "comments": "Map the properties of the current iteration of the cursor an element in the names variable",
                    "lines": [
                        {
                            "from": [
                                "selectMultipleNamesInputCursor",
                                "ID"
                            ],
                            "to": [
                                "names",
                                "id"
                            ]
                        },
                        {
                            "from": [
                                "selectMultipleNamesInputCursor",
                                "FIRST_NAME"
                            ],
                            "to": [
                                "names",
                                "firstName"
                            ]
                        },
                        {
                            "from": [
                                "selectMultipleNamesInputCursor",
                                "LAST_NAME"
                            ],
                            "to": [
                                "names",
                                "lastName"
                            ]
                        }
                    ]
                }
            ]
        }
    ]
}